{"name":"Easypack","tagline":"A super simple build tool made in node to pack marked js and css files in a html file into single timestamped js and css file ","body":"##easypack - The super simple js and css build tool.\r\n\r\nEver wished you had in your fontend only webprojects, the cool feature of popular web-frameworks like rails that \r\npreprocess all the static js and css files before pushing your webpages to production? Thats exactly easypacks does! \r\n\r\nEasypack will take your html file, and pickup all the static css and js files you have marked and will join them into single js and css files and will publish a new html file for you. It can also optionally do a simple minify (currently no bells and whistles) on js and css files. \r\n\r\n###Installation \r\n```\r\n$ npm install easypack\r\n```\r\n\r\n\r\n###Usage\r\nCreate a build.js file like below and execute it using nodejs\r\n```js\r\n/*\r\n* Sample build.js\r\n*/\r\n\r\nvar sb = require('easypack');\r\nsb.build({\r\n  \twebRoot : 'test',\r\n\tinputHtml : \"main.html\",  \r\n\toutputHtml : \"index.html\",\r\n\tjsBuildName : \"app.js\",\r\n\ttimeStampBuild : true\r\n});\r\n```\r\n###Marking scripts for build\r\n\r\nSuppose the main html of your web site is main.html here is how to mark the scripts that build tool should bundle into one file.\r\nNotice the **data-build=\"true\"** attribute in the script tags. Thats what marks scripts to be picked up. \r\n\r\n```html\r\n<!-\r\n  Input: main.html\r\n->\r\n<script src='js/events.js' data-build=\"true\"></script>\r\n<script src='js/ui.js' data-build=\"true\"></script>\r\n<script src='js/main.js' data-build=\"true\"></script>\r\n<script src='js/lib.js' ></script>\r\n\r\n```\r\nAfter Build:\r\n\r\n```html\r\n<!-\r\n  Output: index.html\r\n->\r\n\r\n<script src='js/lib.js' ></script>\r\n<script src=\"build/js/app-1375900584550.js\"></script>\r\n\r\n```\r\n\r\neasypack will pick up the first three scripts in the list and combine them into one javasctipt file which you provided in options using 'jsbuild' option.\r\nThen a new html file will be generated at the same path as main.html, with the new combined script included. All the scripts that were not marked for building will be left alone.\r\n\r\n### Timestamps\r\nif 'timeStampBuild' is set to true, easypack will add a timestamp to the packed javascript file everytile you run the build script.\r\nFor example:\r\n\r\n```html\r\n<script src=\"build/js/app-1375900584550.js\"></script>\r\n```\r\nWhy do this? So that when you push put new code you can be sure that browsers will discard the cached copies of your old code and fetch a new one! \r\n\r\n### Warning\r\nThe tool is in its very early stages, so be careful :) \r\n\r\n\r\n### Authors and Contributors\r\nShaunak Vairagare (@shaunakv1).\r\n","google":"UA-43023357-1","note":"Don't delete this file! It's used internally to help with page regeneration."}